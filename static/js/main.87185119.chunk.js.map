{"version":3,"sources":["media/profilePhoto.jpg","media/githubLogo.svg","media/mail.svg","media/linkedIn.svg","cvcontents/sectionContents.jsx","components/PersonalDetailsHeader.jsx","components/CvSection.jsx","components/Contact.jsx","components/RoleSection.jsx","cvcontents/rolesContents.jsx","components/CodingRoles.jsx","components/PreCodingRoles.jsx","components/CvBody.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","PersonalProfileContents","Typography","SkillsContents","attributes","Breadcrumbs","classes","ol","separator","fontSize","maxItems","itemsAfterCollapse","itemsBeforeCollapse","map","attribute","i","key","interests","skills","PersonalDetailsHeader","className","Paper","elevation","src","profilePhoto","alt","color","variant","CvSection","sectionTitle","crumbsStyle","id","ContactLink","link","img","href","target","rel","Contact","githubLogo","mail","linkedIn","RoleSection","data","viewBox","preserveAspectRatio","x1","y1","x2","y2","year","root","Chip","chipClass","label","company","jobTitle","yearRange","jobDescription","bullet","CodingRoles","starlingSoftwareEngineer","genomicsDevOps","genomicsIT","mondrianIT","PreCodingRoles","uniqueVoice","monarchRecruitment","universityWestEngland","aldSeniorCredit","aldCredit","deMontfort","VERSION","CvBody","React","useState","version","setVersion","isCodingVersion","concat","ToggleButtonGroup","value","exclusive","onChange","size","ToggleButton","App","StylesProvider","injectFirst","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87185119.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilePhoto.bc5ac94f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/githubLogo.b53ff55e.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail.bfe8a6b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedIn.007eb41a.svg\";","import React from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport TripOrigin from '@material-ui/icons/TripOrigin';\nimport './sectionContents.scss';\nimport PropTypes from 'prop-types';\n\nexport const PersonalProfileContents = () =>\n  <Typography>\n    Creative, proactive and engaging with an inquisitive nature and desire to learn. Has a\n    background in various disciplines, both creative and technical, resulting in a broad skill-set\n    and a unique approach to problem-solving. Approaches work with a desire to achieve and\n    excel. Has had a life-long obsession with technology and continues to pursue this through\n    self-study and work-based learning.\n  </Typography>;\n\nexport const SkillsContents = ({ attributes }) =>\n  <Breadcrumbs classes={{ ol: 'skills-contents', separator: 'separator' }} separator={<TripOrigin fontSize='small'/>} maxItems={20} itemsAfterCollapse={4} itemsBeforeCollapse={4}>\n    { attributes.map((attribute, i) => <Typography key={`skill-${i}`}>{attribute}</Typography>)}\n  </Breadcrumbs>;\n\nSkillsContents.propTypes = {\n  attributes: PropTypes.array,\n  crumbsStyle: PropTypes.string\n};\n\nexport const interests = [\n  'Gaming',\n  'Technology',\n  'Coding',\n  'Foreign Languages',\n  'Problem Solving',\n  'Web',\n  'Creative Writing',\n  'Personal',\n  'Fitness',\n  'Socialising',\n  'Cooking and Baking'\n];\n\nexport const skills = [\n  'Java',\n  'Guice',\n  'JUnit',\n  'Mockito',\n  'Javascript',\n  'HTML',\n  'CSS',\n  'Jest',\n  'material-ui',\n  'Bootstrap',\n  'Postgres',\n  'React',\n  'AWS',\n  'Elasticsearch',\n  'Humio',\n  'Git'\n];","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport profilePhoto from '../media/profilePhoto.jpg';\nimport './PersonalDetailsHeader.scss';\nimport { PersonalProfileContents } from '../cvcontents/sectionContents';\n\nexport default function PersonalDetailsHeader() {\n  return (\n    <div className='header-container'>\n      <Paper className='paper' elevation={4}>\n        <img\n          src={profilePhoto}\n          alt='Lee Stewart'\n          color='transparent'\n        />\n        <Typography variant='h4'>\n          Lee Stewart\n        </Typography>\n      </Paper>\n      <div className='header-description'>\n        <PersonalProfileContents/>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport './CvSection.scss';\nimport PropTypes from 'prop-types';\nimport { SkillsContents } from '../cvcontents/sectionContents';\n\nexport default function CvSection ({ sectionTitle, attributes, crumbsStyle }) {\n  return (\n    <div className='container'>\n      <div className='title-container'>\n        <Paper className='section-title'>\n          <Typography variant='h5'>{sectionTitle}</Typography>\n        </Paper>\n      </div>\n      <div id={crumbsStyle} className='contents-container'>\n        <SkillsContents attributes={attributes}/>\n      </div>\n    </div>\n  );\n}\n\nCvSection.propTypes = {\n  sectionTitle: PropTypes.string,\n  attributes: PropTypes.array,\n  crumbsStyle: PropTypes.string\n};\n","import React from 'react';\nimport './Contact.scss';\nimport githubLogo from '../media/githubLogo.svg';\nimport mail from '../media/mail.svg';\nimport linkedIn from '../media/linkedIn.svg';\nimport PropTypes from 'prop-types';\n\nconst ContactLink = ({ link, img, alt }) => (\n  <a href={link} target='_blank' rel='noopener noreferrer' className='logo'>\n    <img\n      src={img}\n      alt={alt}\n      color='transparent'\n    />\n  </a>\n);\n\nContactLink.propTypes = {\n  link: PropTypes.string,\n  img: PropTypes.string,\n  alt: PropTypes.string\n};\n\nexport default function Contact() {\n  return (\n    <div className='contact-container'>\n      <ContactLink\n        link='https://github.com/zantetsuken88'\n        img={githubLogo}\n        alt='GitHub'\n      />\n      <ContactLink\n        link='mailto:lee.stewart@alumni.dmu.ac.uk'\n        img={mail}\n        alt='Email'\n      />\n      <ContactLink\n        link='https://www.linkedin.com/in/lee-stewart-684839ba/'\n        img={linkedIn}\n        alt='LinkedIn'\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\nimport { Paper, Typography, Chip } from '@material-ui/core';\nimport './RoleSection.scss';\nimport PropTypes from 'prop-types';\n\nexport default function RoleSection ({ data }) {\n  return (\n    <div className='role-container'>\n      <div className='label-container'>\n        <svg viewBox='0 0 1 1' className='year-line-top' preserveAspectRatio='none'>\n          <line x1='50%' y1='0' x2='50%' y2='100%'/>\n        </svg>\n        <WorkOutlineIcon className='year-label' fontSize='large'/>\n        <Typography variant='button' className='year-text'>{data.year}</Typography>\n        <svg viewBox='0 0 1 1' className='year-line-bottom' preserveAspectRatio='none'>\n          <line x1='50%' y1='0%' x2='50%' y2='100%'/>\n        </svg>\n      </div>\n      <Paper elevation={3} classes={{ root: 'job-description' }}>\n        <div className='job-stats-container'>\n          <Chip className={`chip chip${data.chipClass} chip${data.chipClass}-outer`}\n            variant='outlined'\n            label={<Typography variant='body2'>{data.company}</Typography>}/>\n          <Chip className={`chip chip${data.chipClass} chip${data.chipClass}-inner`}\n            label={<Typography variant='body2'>{data.jobTitle}</Typography>}/>\n          <Chip className={`chip chip${data.chipClass} chip${data.chipClass}-outer`}\n            variant='outlined'\n            label={<Typography variant='body2'>{data.yearRange}</Typography>}/>\n        </div>\n        {data.jobDescription.map((bullet, i) =>\n          <Typography variant='body2' key={`data.jobTitle${i}`}>{bullet}</Typography>\n        )}\n      </Paper>\n    </div>\n  );\n}\n\nRoleSection.propTypes = {\n  data: PropTypes.shape({\n    year: PropTypes.string,\n    jobDescription: PropTypes.array,\n    yearRange: PropTypes.string,\n    jobTitle: PropTypes.string,\n    company: PropTypes.string,\n    chipClass: PropTypes.string\n  })\n};\n","export const data = {\n  'starlingSoftwareEngineer': {\n    'year': '2020',\n    'jobDescription': [\n      ' • Full Stack Engineer working principally with Java/Postgres back end, and React front end.',\n      ' • Worked in the Marketplace and Public APIs team, spanning the Starling 3rd party integrations marketplace, Developer Sandbox, public API and Open Banking.',\n      ' • Was part of the small team that delivered the Starling personal and business Euro currency accounts and SEPA payment scheme.',\n      ' • Founder of Starlings internal LGBTQ+ employee network, and part of the team that mobilised \"Always Open\" diversity and inclusiveness forum.'\n    ],\n    'yearRange': '2018-2020',\n    'jobTitle': 'Software Engineer',\n    'company': 'Starling Bank',\n    'chipClass': '-coding'\n  },\n  'genomicsDevOps': {\n    'year': '2017',\n    'jobDescription': [\n      ' • Internally promoted after demonstrating an interest and aptitude for scripting and automation.',\n      ' • Responsibilities revolved around aiding Genomics England in delivery of its infrastructure and platforms.',\n      ' • Working with developers in a time-critical environment to deploy bespoke applications on our infrastructure, and to automate future deployments.',\n      ' • Have gained a multitude of skills including Git, Python scripting, Saltstack, Packer, VMware, Vagrant, Terraform.'\n    ],\n    'yearRange': 'July 2016 - Nov 2017',\n    'jobTitle': 'DevOps Engineer',\n    'company': 'Genomics England',\n    'chipClass': '-coding'\n  },\n  'genomicsIT': {\n    'year': '2016',\n    'jobDescription': [\n      ' • Assumed control over internal IT support and systems administration. These responsibilities had previously been divided and handled by non-specialists and external support.',\n      ' • Built strong relationships with key members of University IT support staff, improving speed and quality of external support.',\n      ' • Identified opportunities for automating processes for efficiency, subsequently building a standardised image for rapid deployment to client machines.',\n      ' • Proactively developed own skills and technical knowledge in order to continuously improve service.'\n    ],\n    'yearRange': 'Nov 2015 - July 2016',\n    'jobTitle': 'IT Analyst',\n    'company': 'Genomics England',\n    'chipClass': '-coding'\n  },\n  'mondrianIT': {\n    'year': '2015',\n    'jobDescription': [\n      ' • Structured training role, reporting to Director of IT.',\n      ' • Responsible for resolution of day to day IT related queries and problems via service desk management system.'\n    ],\n    'yearRange': 'Sept 2015 - Nov 2016',\n    'jobTitle': 'IT Assistant',\n    'company': 'Mondrian London',\n    'chipClass': '-coding'\n  },\n  'uniqueVoice': {\n    'year': '2014',\n    'jobDescription': [\n      ' • Learned and performed roles on stage or film as directed.',\n      ' • Interpreted and memorised lines on provided scripts, including directorial notes and actions.',\n      ' • Worked alongside other actors and technicians in order to develop strong relationships and rapports on and off stage/screen.'\n    ],\n    'yearRange': 'Aug 2013 - Aug 2014',\n    'jobTitle': 'Actor & Workshop Leader',\n    'company': 'Unique Voice CIC',\n    'chipClass': '-pre-coding'\n  },\n  'monarchRecruitment': {\n    'year': '2014',\n    'jobDescription': [\n      ' • Used current IT in every lesson in order to promote up to date skills and creative teaching.',\n      ' • Was able to adapt and improvise to quickly changing circumstances and variable working environments.'\n    ],\n    'yearRange': 'Dec 2013 - July 2014',\n    'jobTitle': 'Cover Teacher',\n    'company': 'Monarch Recruitment',\n    'chipClass': '-pre-coding'\n  },\n  'universityWestEngland': {\n    'year': '2013',\n    'jobDescription': [\n      ' • PGCE PCET (Post-Compulsory Education and Training).',\n      ' • Qualified to teach Performing Arts disciplines at post-GCSE level.',\n      ' • Passed at Masters Level.'\n    ],\n    'yearRange': 'Sep 2012 - Jun 2013',\n    'jobTitle': 'PGCE PCET',\n    'company': 'University of the West of England',\n    'chipClass': '-pre-coding'\n  },\n  'aldSeniorCredit': {\n    'year': '2012',\n    'jobDescription': [\n      ' • Responsibilities included ownership of the Synertec Prism mailing system for the department. This included 1st line support for users on the team, staff training and contact with Synertec.',\n      ' • Used in-house software and Excel to generate regular reports using V-Lookups and Pivot Tables.',\n      ' • Was responsible for undertaking the team leader’s duties in their absence.',\n      ' • First point of contact for team queries and ad-hoc training.',\n      ' • Handled escalated telephone calls.'\n    ],\n    'yearRange': 'Jan 2012 - Aug 2012',\n    'jobTitle': 'Senior Credit Controller',\n    'company': 'ALD Automotive',\n    'chipClass': '-pre-coding'\n  },\n  'aldCredit': {\n    'year': '2012',\n    'jobDescription': [\n      ' • Responsible for managing a portfolio of vehicle hire and hire purchase accounts in arrears, chasing for late payment and escalating where necessary.'],\n    'yearRange': 'Feb 2011 - Jan 2012',\n    'jobTitle': 'Credit Controller',\n    'company': 'ALD Automotive',\n    'chipClass': '-pre-coding'\n  },\n  'deMontfort': {\n    'year': '2010',\n    'jobDescription': ['  • Graduated with 2:1 Honours.'],\n    'yearRange': 'Oct 2007 - May 2010',\n    'jobTitle': 'BA(Hons) Performing Arts',\n    'company': 'DeMontfort University',\n    'chipClass': '-pre-coding'\n  }\n};","import React from 'react';\nimport RoleSection from './RoleSection';\nimport { data } from '../cvcontents/rolesContents.jsx';\n\nexport default function CodingRoles () {\n  return (\n    <div>\n      <RoleSection data={data.starlingSoftwareEngineer}/>\n      <RoleSection data={data.genomicsDevOps}/>\n      <RoleSection data={data.genomicsIT}/>\n      <RoleSection data={data.mondrianIT}/>\n    </div>\n  );\n}\n","import React from 'react';\nimport RoleSection from './RoleSection';\nimport { data } from '../cvcontents/rolesContents.jsx';\n\nexport default function PreCodingRoles () {\n  return (\n    <div>\n      <RoleSection data={data.uniqueVoice}/>\n      <RoleSection data={data.monarchRecruitment}/>\n      <RoleSection data={data.universityWestEngland}/>\n      <RoleSection data={data.aldSeniorCredit}/>\n      <RoleSection data={data.aldCredit}/>\n      <RoleSection data={data.deMontfort}/>\n    </div>\n  );\n}","import Typography from '@material-ui/core/Typography';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport CodingRoles from './CodingRoles';\nimport PreCodingRoles from './PreCodingRoles';\nimport React from 'react';\nimport './CvBody.scss';\n\nconst VERSION = { CODING: 'CODING', PRE_CODING: 'PRE_CODING' };\n\nexport default function CvBody() {\n  const [version, setVersion] = React.useState(VERSION.CODING);\n\n  const isCodingVersion = () => version === VERSION.CODING;\n\n  const toggleCvVersion = () => isCodingVersion() ? setVersion(VERSION.PRE_CODING) : setVersion(VERSION.CODING);\n\n  return (\n    <>\n      <div className='app-section-container'>\n        <div className='app-switcher-bar'>\n          <Typography variant='button' className={'app-switcher-bar-'.concat(isCodingVersion() ? 'coding' : 'pre-coding')}>Experience: </Typography>\n          <ToggleButtonGroup className='app-toggle-buttons' value={version} exclusive onChange={toggleCvVersion} size='small'>\n            <ToggleButton value={VERSION.CODING}>\n              <Typography variant='caption' className='app-switcher-bar-coding'>\n                Software Engineering\n              </Typography>\n            </ToggleButton>\n            <ToggleButton value={VERSION.PRE_CODING}>\n              <Typography variant='caption' className='app-switcher-bar-pre-coding'>\n                Everything Else\n              </Typography>\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n      </div>\n      {isCodingVersion() ? <CodingRoles/> :  <PreCodingRoles/>}\n    </>\n  );\n}\n\n","import React from 'react';\nimport './App.scss';\nimport PersonalDetailsHeader from './components/PersonalDetailsHeader';\nimport CvSection from './components/CvSection';\nimport Contact from './components/Contact';\nimport CvBody from './components/CvBody';\nimport { skills, interests } from './cvcontents/sectionContents';\nimport { StylesProvider } from '@material-ui/core/styles';\n\nconst App = () =>\n  <main className=\"App-header\">\n    <StylesProvider injectFirst>\n      <PersonalDetailsHeader/>\n      <CvBody/>\n      <CvSection crumbsStyle='skills' sectionTitle='Skills' attributes={skills}/>\n      <CvSection crumbsStyle='interests' sectionTitle='Interests' attributes={interests}/>\n      <Contact/>\n    </StylesProvider>\n  </main>;\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n/*\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * Learn more about service workers: https://bit.ly/CRA-PWA\n */\nserviceWorker.unregister();\n"],"sourceRoot":""}